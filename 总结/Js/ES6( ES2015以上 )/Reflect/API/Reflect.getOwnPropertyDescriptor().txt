

	一、概念

		1、静态方法 Reflect.getOwnPropertyDescriptor() 与 Object.getOwnPropertyDescriptor() 方法相似。

		2、如果在对象中存在，则返回给定的属性的属性描述符。否则返回 undefined。 

	二、语法

		Reflect.getOwnPropertyDescriptor(target, propertyKey)

	三、参数

		target：需要寻找属性的目标对象。

		propertyKey：获取自己的属性描述符的属性的名称。	

	四、返回值

		如果属性存在于给定的目标对象中，则返回属性描述符；否则，返回 undefined。

	五、异常

		抛出一个 TypeError，如果目标不是 Object。

	六、注意

		Reflect.getOwnPropertyDescriptor方法返回一个属性描述符，如果给定的属性存在于对象中，否则返回 undefined 。


	七、例

		Reflect.getOwnPropertyDescriptor({x: "hello"}, "x"); // {value: "hello", writable: true, enumerable: true, configurable: true}

		Reflect.getOwnPropertyDescriptor({x: "hello"}, "y"); // undefined

		Reflect.getOwnPropertyDescriptor([], "length"); // {value: 0, writable: true, enumerable: false, configurable: false}

	八、与 Object.getOwnPropertyDescriptor() 的不同点

		Reflect.getOwnPropertyDescriptor("foo", 0); // TypeError: "foo" is not non-null object

		Object.getOwnPropertyDescriptor("foo", 0); // { value: "f", writable: false, enumerable: true, configurable: false }

