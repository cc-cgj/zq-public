


	一、同步和异步

	背景：JS是单线程,即代码是依次执行，后面的任务需等待前面任务完成才能执行。为了解决这个问题，HTML5提出Web Worker标准，允许JS创建多个线程，

但是子线程完全受主线程控制。于是诞生了同步任务和异步任务。

		------同步任务

			1、在主线程上排队执行的任务，前一个任务结束后再执行后一个任务，形成的是一个执行桟。

		------异步任务

			1、不进入主线程，而进入“任务队列”，当主线程中的任务执行完，才会从"任务队列"取出异步任务放入主线程执行。所有任务依次同时进行。

			2、异步是通过回调函数实现的

				------异步任务的三种类型：

					1、普通事件，如click、resize

					2、资源加载，如load、error
	
					3、定时器，如setTimeout、setInterval


	二、JS执行机制(事件循环)

			1、先执行执行桟中的同步任务

			2、异步任务(回调函数)放入任务队列中

			3、一但执行完执行桟中的同步任务，系统就会按次序读取任务队列中的异步任务，被读取的异步任务进入执行桟开始执行
