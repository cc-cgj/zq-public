
一、DOM事件流

	1、事件流描述的是从页面中接收父子元素同一事件的顺序

	2、事件发生时会在父子元素节点之间按照特定的顺序传播，这个传播过程称为DOM事件流。

		如：我们给页面中的一个div注册了点击事件，当你单击了div，其实body、html也被点击了，甚至document(最大的盒子)也被点击了

	------DOM事件流一共经历3个阶段：
		1、捕获阶段：网景最早提出，由DOM最顶层节点开始，然后逐级向下传播到最具体的元素接收的过程
		2、当前目标阶段：到达目标事件位置（事发地），触发事件；
		3、冒泡阶段：IE最早提出，先有最具体的元素接收，然后逐级向上传播到DOM最顶层节点的过程

	------注意：
		1、只能执行捕获或冒泡一个阶段

		2、onclick和attachEvent只能得到冒泡阶段

		3、addEventListener的第三个参数为true表示事件捕获阶段调用事件处理程序，为false则表示冒泡阶段调用事件处理程序，若参数为空，

	则默认为false。

		4、实际开发中我们很少使用事件捕获，更多使用的是事件冒泡

		5、有些事件时没有冒泡的，比如onblur、onfocus、onmouseenter、onmouseleave


二、onmouseover/out会发生冒泡

	概念：

		DOM事件流的冒泡阶段也包括同时有onmouseenter/leave事件的父子元素，当鼠标从父元素之外滑入子元素时，再从子元素滑出，都不经过

	父元素，此时都会执行父元素滑入滑出事件的处理函数。

	注意：
		1、鼠标从父元素之外滑入且鼠标不经过父元素

		2、鼠标从子元素滑出且鼠标不经过父元素

二、事件对象

	------事件发生后，跟事件相关的一系列信息数据的集合都放到这个对象里面，这个对象就叫事件对象。

			如：
				1、谁绑定了这个事件。
				2、鼠标触发事件的话，会得到鼠标的相关信息，如鼠标位置。
				3、键盘触发事件的话，会得到键盘的相关信息，比如按了哪个键。

	------如何获得事件对象

			1、当事件触发时，系统会默认以实参的形式将事件对象传给事件处理函数。

			2、这个事件对象可以直接通过event或window.event /兼容/直接获取，也可以在事件处理函数中声明一个形参来获取事件对象，注意的

		是声明的形参可以获取，直接使用event或window.event也可以获取。

			注意：

				1、在事件处理函数中的形参必须只有一个时浏览器才会默认将事件对象传递给该形参。

				2、若有多个参数，只能通过window.event的方式传递将事件对象传递给形参。也可以直接通过window.event获取事件对象。 
			
	------兼容问题：

		1、在标准浏览器中，只需要定义形参e就可以获取到或直接使用event

		2、在IE6-8中，浏览器不会自动传递事件对象，需要通过声明形参e，通过window.e或直接使用window.event来得到

		解决方法：

			e/event || window.e/window.event

三、事件对象的属性和方法

	1、event.target：返回触发事件的对象

	2、event.srcElement：返回触发事件的对象(IE6-8)

	3、event.type：返回事件的类型，比如click、mouseover。注意不带on

	4、event.cancelBubble:阻止当前元素的冒泡，不会继续再往后触发了。(IE6-8)

		如：给嵌套元素都添加点击事件，当发生冒泡时，点击子元素会依次触发父元素，添加该属性则只点击子元素就只触发当前元素。

	5、event.stopPropagation()：阻止冒泡，IE6-8不兼容

	6、event.returnValue:该属性阻止默认事件(默认行为)(IE6-8)

	7、event.preventDefault():该方法阻止默认事件，如不让链接跳转

	----event.target和this的区别：

		1、this是事件绑定的元素(绑定这个事件处理函数的元素)

		2、event.target是事件触发的元素

		注意：
			通常情况下target和this返回的对象是一致的

			------有一种情况不同，事件冒泡(父子元素有相同事件，单击子元素，父元素的事件处理函数也会被执行)，此时在子元素中打印

			this和event.target

				1、this指向的是父元素，因为它是绑定事件的元素对象

				2、而target指向的是子元素，因为它是触发事件的那个具体元素对象


四、事件委托

	只用给父元素注册事件，利用事件冒泡，在子元素的中触发，会冒泡到父元素，然后去控制相应的子元素。
	------作用：
			我们只操作一次DOM,提高了程序的性能。
			动态新创建的子元素，也拥有事件。

五、常用鼠标事件

	1、onclick：鼠标点击左键触发

	2、onmouseover：鼠标经过触发

	3、onmouseout：鼠标离开触发

	4、onfocus：获取鼠标焦点触发

	5、onblur：失去鼠标焦点触发

	6、onmousemove：鼠标移动触发

	7、onmousedown：鼠标按下触发

	8、onmouseup：鼠标弹起时触发

	案例：禁止选中文字和禁止鼠标右击显示菜单事件

		1、selectstart：元素被开始选中时触发（即选中动作刚开始，尚未实质性被选中）

		2、contextmenu：当用户鼠标右击元素时将显示上下文菜单

		3、event.preventDefault/e.returnValue/return false

六、鼠标事件对象

	event事件对象是事件相关的一系列信息的集合。

		1、event.clientX：返回鼠标相对于浏览器窗口可视区的X坐标

		2、event.clientY：返回鼠标相对于浏览器窗口可视区的Y坐标

		3、event.pageX：返回鼠标相对于文档页面的X坐标(IE9以上)

		4、event.pageY:返回鼠标相对于文档页面的Y坐标(IE9以上)

		5、event.screenX：返回鼠标相对于电脑屏幕的X坐标

		6、event.screenY：返回鼠标相对于电脑屏幕的Y坐标

		注意：	
			1、浏览器窗口可视区、文档页面是指除了地址栏、菜单栏、功能栏以及状态栏等之外的，我们打开网页能显示的那一部分区域。简单理

		解就是，浏览器窗口的可视区域就是可以用来显示的区域。

			2、client和page获取鼠标坐标只有在Y轴上有区别，当页面没有滚动条或滚动到最上面时两个值都相等，只有往下滚动时，page的Y轴值

		是不会变的，而clientY轴坐标值会减少，减少的值(像素)为滚动的距离)


七、常用的键盘事件

	1、onkeyup:某个键盘按键被松开时触发

	2、onkeydown：某个键盘按键被按下时触发

	3、onkeypress：某个键盘按键被按下时触发(注意：它不识别功能键，如ctrl、shift、箭头等)

	
	注意：
		1、如果使用addEventListener不需要加on

		2、三个事件同时执行的顺序：keydown、keypress、keyup


八、键盘事件对象

	1、event.keyCode:返回该键的ASCII码(键码)

	注意：	
		onkeydown和onkeyup不区别字母大小写，onkeypress区分字母大小写


