


	function foo (){

		var name = "cgj"

		var age = 18


		function bar (){

			console.log( name )
			
			console.log( age )
			
		}

		return bar

	}

	const fn = foo()

	fn()

	注意：

		1、ECMA中 只要函数的返回值是函数，不管返回值函数是否有变量使用了外部函数的环境变量，都会形成内存泄漏

		即外部函数被调用后，外部函数的VO: AO 在堆中不会被销毁


		2、函数执行完 函数上下文出栈，但是全局变量fn指向一个bar函数的内存地址，所以导致不会触发GC（垃圾回收）