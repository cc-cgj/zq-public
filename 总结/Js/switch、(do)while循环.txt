-----------------------------JavaScript-----------------------------

------switch(变量/常量){
	case 表达式或值:
		执行的代码(console.log(1111))
		break
	default:
		执行的代码
	}
	switch 变量/常量会与结构中的 case 的值做比较，如果存在匹配全等(===)，则与该 case 关联的代码块会被执行，并在遇到 break 时停止，
整个 switch 语句代码执行结束 如果所有的 case 的值都和switch 变量/常量不匹配，则执行 default 里的代码
	（注意：执行case 里面的语句时，如果没有break，则继续执行下一个case里面的语句，反复循环直至case语句被执行完或者遇到break停止。）\

	注意：
		1、在 switch 内部使用严格相等 === 进行判断

			例：

				str = 'A',  str == new String('A') //true,str === new String('A') //false
		
				switch(str){ case 'A':console.log(true)break; default:console.log(false) } // false

------switch和if else的区别
1、一般情况下，它们两个语句可以相互替换
2、switch...case 语句通常处理 case为比较确定值的情况， 而 if…else…语句更加灵活，常用于范围判断(大于、等于某个范围)

------while（条件表达式）{
	//循环体代码
}
	判断条件表达式，为true,则执行循环体代码，为false则退出循环，执行while后面的代码
	循环体代码执行完毕后，程序会继续判断执行条件表达式，如结果仍为true，则会继续执行循环体，直到循环结果为 false 时，整个循环过程
才会结束。
	注意：使用 while 循环时一定要注意，它必须要有退出条件，否则会成为死循环

-----do{
	// 循环体代码 ‐ 条件表达式为 true 时重复执行循环体代码
} while(条件表达式)
	1 先执行一次循环体代码 
	2 再执行条件表达式，如果结果为true，则继续执行循环体代码，如果为 false，则退出循环，继续执行后面代码 
	注意：先再执行循环体，再判断

------断点调试：
	断点调试是指自己在程序的某一行设置一个断点，调试时，程序运行到这一行就会停住，然后你可以一步一步往下 调试，调试过程中可以看
各个变量当前的值，出错的话，调试到出错的代码行即显示错误，停下。断点调试可以帮助观 察程序的运行过程。
	断点调试的流程：（调式for、while、do-while循环）
		1、浏览器中按 F12‐‐> sources ‐‐>找到需要调试的文件‐‐>在程序的某一行设置断点 
		2、Watch: 监视，通过watch可以监视变量的值的变化，非常的常用。 
		3、摁下F11，程序单步执行，让程序一行一行的执行，这个时候，观察watch中变量的值的变化。

（DOM中的write()方法）document.write():网页向文档中输出内容(内容可以为HTML标签和文本)


-----------------------------------------------------------------------------------------------------------------------------------------

	一、a++ 和 ++a的区别

		例：

			num = ++a // a先加1再赋值给num

			num = a++ // a先赋值给num再加1
	

