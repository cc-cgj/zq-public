
	一、概念

		1、throw语句用来抛出一个用户自定义的异常。当前函数的执行将被停止（throw之后的语句将不会执行）

		2、并且控制将被传递到调用堆栈中的第一个catch块。如果调用者函数中没有catch块，程序将会终止。

	二、语法

		throw expression; 

	三、参数

		expression：要抛出的表达式。

	四、注意

		使用throw语句来抛出一个异常。当你抛出异常时，expression 指定了异常的内容。下面的每行都抛出了一个异常：
	
		throw "Error2"; // 抛出了一个值为字符串的异常

		throw 42;       // 抛出了一个值为整数42的异常

		throw true;     // 抛出了一个值为true的异常	

	五、例

		抛出一个对象//你可以在抛出异常时指定一个对象。然后可以在catch块中引用对象的属性。

		function UserException(message) {
   
			this.message = message;
   
			this.name = "UserException";

		}

		function getMonthName(mo) {
   
			mo = mo-1; // 调整月份数字到数组索引 (1=Jan, 12=Dec)
   
			var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul","Aug", "Sep", "Oct", "Nov", "Dec"];
   
			if (months[mo] !== undefined) {
      
				return months[mo];
   
			} else {
      			
				throw new UserException("InvalidMonthNo");
   			}
		}

		try {
   
			// statements to try
   
			var myMonth = 15; // 15 超出边界并引发异常
   
			var monthName = getMonthName(myMonth);

		} catch (e) {
   
			var monthName = "unknown";
   
			console.log(e.message, e.name); // 传递异常对象到错误处理
		}


