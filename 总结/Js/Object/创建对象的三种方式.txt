

	------JavaScript 中的对象分为3种：自定义对象 、内置(系统)对象、 浏览器对象前面两种对象是JS 基础 内容，属于 ECMAScript； 第三个
浏览器对象属于JS独有的，

------注意：在js中一切皆对象，除null外

------为什么需要使用对象？

	数组只能够通过索引值访问数据，比如保存一个人的完整信息（姓名、年龄、爱好等），所以通过数组来访问信息只能使用索引值，若数据过大

，索引值就越多，要想准确访问比较困难，而对象中为每项数据设置了属性名称，可以访问数据更语义化，方便开发者使用。

//对象是由属性和方法组成的。

获取(自定义对象)对象的属性的两种取法：

		1、对象名.属性名

		2、对象名["属性名"]

对象的方法使用：
		对象名.方法名()

------对象创建：
		1、字面量创建对象
			var 对象名 = {
				属性名/"属性名"："属性值",
				方法名/"方法名": function(){}
	   		}
			注意：
				var 对象名 = {}，可以通过对象名["属性名"] = 属性值(数值/字符串)，来添加属性(只是给了属性没有属性值是不会添加属性的)
			
		2、new来创建对象

			var 对象名 = new Object() / Object()
			对象名.属性名 = "属性值"
			对象名.方法名 = function(){}

		3、用自定义构造函数来创建对象

			function 函数名(形参){
				this.属性名 = 形参(属性值)
				this.方法名 = 形参(函数/方法)
			}
			var 对象名 = new 构造函数名(实参)

new关键字的作用：
	
	1、在构造函数代码开始执行之前，创建一个空对象、
	
	2、修改this的指向(window)，把this指向创建出来的空对象
	
	3、执行构造函数的代码
	
	4、在函数完成之后，返回this---即创建出来的对象

	----------------------------------------------------------------------------------

	1、首先创建了一个新对象
		
	2、设置原型，将对象的原型设置为函数的prototype对象

	3、让函数的this指向这个对象，执行构造函数的代码（为这个新对象添加属性）

	4、判断函数的返回值类型，如果是值类型，返回创建的对象。如果是引用类型，就返回这个引用类型的对象

自定义构造函数要求：
	1、函数名首字母为大写(前端约定)
	2、使用new(new 函数名())调用构造函数
	3、构造函数不需要return就可以返回结果
	4、我们的属性和方法前面必须添加this(this，谁调用我我就指向谁，默认是指向window)  


JavaScript 提供了多个内置(系统)对象：Math、 Date 、Array、String等

手册：https://developer.mozilla.org/zh-CN/