

	一、v-on
	
		我们必须为事件处理程序提供一个正确的 prop 名称，例如，要处理 click 事件，prop 名称应该是 onClick。

		render() {
  
			return h('div', {
    
				onClick: $event => console.log('clicked', $event.target)
  
			})
		}


	二、事件修饰符

		对于 .passive 、.capture 和 .once 事件修饰符，可以使用驼峰写法将他们拼接在事件名后面：

			render() {
  
				return h('input', {
    
					onClickCapture: this.doThisInCapturingMode,
    
					onKeyupOnce: this.doThisOnce,
    
					onMouseoverOnceCapture: this.doThisOnceInCapturingMode
  				})
			}

		 .stop ===>	event.stopPropagation()

		 .prevent ===>	event.preventDefault()

		 .self ===>	if (event.target !== event.currentTarget) return

		 键：.enter, .13 ===>	if (event.keyCode !== 13) return (对于别的按键修饰符来说，可将 13 改为另一个按键码)
		
		 修饰键： .ctrl, .alt, .shift, .meta ===>   if (!event.ctrlKey) return (将 ctrlKey 分别修改为 altKey, shiftKey, 或 metaKey)  


		例

			render() {
  
				return h('input', {
    
					onKeyUp: event => {
      
						// 如果触发事件的元素不是事件绑定的元素,则返回
      
						if (event.target !== event.currentTarget) return
      
						// 如果向上键不是回车键，则终止
      
						// 没有同时按下按键 (13) 和 shift 键
      
						if (!event.shiftKey || event.keyCode !== 13) return
      
						// 停止事件传播
      
						event.stopPropagation()
      
						// 阻止该元素默认的 keyup 事件
      				
						event.preventDefault()
    
					}
  
				})
			}
			