

	一、创建节点(注意：创建的元素节点是保存在内存中的，要想显示在页面上需要通过添加元素节点来实现)

		document.createElement("HTML元素")

		(注意：创建的元素节点是保存在内存中的，可以先给创建的节点添加文本等值，然后再通过添加元素节点在页面中显示)

	二、添加子节点(还可以进行节点的移动)

		1、node.appendChild(创建/复制的节点)：该方法是将创建/复制的一个元素节点添加到指定父节点的子节点列表末尾。

		2、node.insertBefore(创建/复制的节点,指定子元素节点):该方法时将创建/复制的一个元素节点添加到指定父节点的指定子节点列表前面

			（注意：指定的子元素节点必须要先获取到）

	三、删除节点
		
		remove():删除指定元素

			例： document.querySelector('#id').remove()

	四、删除子节点

		1、removeChild(删除的子节点):删除指定元素的某个指定的子节点。以Node对象返回被删除的节点，如果节点不存在则返回 null。

			例：
				var list=document.getElementById("myList");

				list.removeChild(list.childNodes[0]);

	五、复制节点

		1、cloneNode(值):返回调用该方法的节点的一个副本。

			注意：	
				值为空或false，则是浅复制，即只复制调用该方法的节点本身，不复制里面的子节点

				值为true，则复制节点本身以及里面所有的子节点

	六、创建元素节点的三种方式的区别：

		1、document.write()：直接将内容写入页面的内容流，但当文档流执行完毕，触发事件来执行该指令会导致页面全部重绘

		2、element.innerHTML:是将内容写入某个DOM节点，不会导致页面全部重绘，只会重绘指定的节点且创建多个元素效率更高

			注意：

				(不要拼接字符串，采取数组形式拼接)，结构稍微复杂。

				为什么建议不使用字符串拼接：当两个字符串进行拼接，桟内存中新建一个空间来存放拼接后的字符串，但注意的是那
		
			两个字符串在内存中是不会被清空，导致了数据冗余。

		3、element.creatElement()：创建多个元素效率较低，但结构更清晰。
	
	七、prompt("您的账号")：浏览器弹出输入框，用户可以输入

		（注意：返回值类型为String）

