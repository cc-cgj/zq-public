

一、什么是版本管理

	版本管理是一种记录文件变化的方式，以便将来查阅特定版本的文件内容。

二、Git是什么

	Git是一个版本管理控制系统（缩写VCS），它可以在任何时间点，将文档的状态作为更新记录保存起来，也可以在任何时间点，将更新记录恢复回来。

三、文件储存在Git中的流程
		
		1、工作目录：即需要被Git管理的项目目录

		2、暂存区：临时存放被修改文件

		3、git仓库：用于存放提交记录

四、Git的配置

	使用git保存记录前需要设置用户名来区分提交给谁。	

	1、配置或修改提交人的昵称：git config --global user.name 用户名 

	2、配置或修改提交人的邮箱：git config --global user.email 邮箱

	3、查看git配置信息：git config --list

五、提交的步骤

	1、在所要保存的文件目录下右击鼠标打开Git Bash Here

	2、git init：生成git仓库 //会在当前目录下生成隐藏文件 .git

	3、git status： 查看文件状态 //红色 ---- 工作目录中  绿色 ---- 在暂存区

	4、git add 文件名： 将文件保存到暂存区 // git add . 将当前目录所有文件状态记录在暂存区

		注意：当再次记录同一文件的内容时会替换上一次记录的文件内容

	5、git commit -m 提交信息：提交所有暂存区的文件状态到git仓库

		--no-verify //取消eslint格式检查

		注意：通过设置提交信息来区分每次提交的文件，相当于给每次提交的所有文件取一个别名来区分

	6、git log 查看提交记录

	7、git push -u origin master -f 强制推送

六、撤销

	1、git checkout 文件名：将选择的暂存区中的文件覆盖当前工作目录中的所有文件

	2、git rm --cached 文件名：将该文件从暂存区中删除

	3、git reset --hard commitID ：将 git 仓库中指定的更新记录恢复出来，并且覆盖暂存区和工作目录

		注意：commitID：为 git log中  commit后的一串数字和字母

七、分支

	概念：
	
		1、主分支（master）：第一次向 git 仓库中提交更新记录时自动产生的一个分支

		2、开发分支（develop）：作为开发的分支，基于 master 分支创建。
	
		3、功能分支（feature）：作为开发具体功能的分支，基于开发分支创建

	
八、分支命令

	1、git branch：查看分支

	2、git branch 分支名称：创建分支

	3、git checkout 分支名称：切换当前分支

	4、git merge 分支名称：跟指定分支进行合并。

		注意：合并后分支依旧存在

	5、git branch -d 分支名称：删除分支

		注意：

			1、分支被合并后才允许删除

			2、不能删除当前分支

			3、可以使用-D删除除当前分支以外的分支


九、将本地仓库上传到远程的仓库(GitHub)

	1、git push 远程仓库地址 分支名称

	2、git remote add 远程仓库地址别名 远程仓库地址 //设置远程仓库别名

	2、git push 远程仓库地址别名 分支名称 //使用别名上传

	3、git push -u 远程仓库地址别名 分支名称 //-u:即下次上传时直接输入 git push 就可以将该分支的文件上传到远程仓库

	注意：如果你使用 clone 命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin” 为简写。

十、查看远程仓库中所有的分支列表

	git remote show "远程仓库名称"	

十一、查看远程仓库地址命令

	git remote -v

十二、修改远程仓库别名地址

	git remote set-url origin(远程仓库别名) "远程仓库地址"

十三、删除远程仓库别名

	git remote rm origin(远程仓库别名)

十三、拉取远程仓库所有文件到本地
 
	git clone "仓库地址" "文件夹名"(可选)
		
		 git clone -b 分支名称 仓库地址 //branch 指定分支

	注意：由于git clone每次是拉取所有的文件，所以通过git pull来拉取远程仓库中最新的版本的文件

	git pull 远程仓库地址 分支名称 //若已记住推送地址则直接使用 git pull

	注意：

		条件：同一文件在仓库内的被修改，在本地也被修改

		通过 git pull 拉取时只会提示说以下文件将被覆盖，此时本地文件并不会与仓库中的文件进行整合

		问题：无法将本地文件与线上仓库文件进行整合

		办法1：

			1、git add . 将该文件重新提交到暂存区

			2、然后再git pull 拉取最新的

		方法2：

			1、git stash //保存当前工作进度，将工作区(当前目录)和暂存区恢复到修改之前。

			2、git pull 拉取最新的

			3、git stash pop //恢复工作进度到工作区
		

十三、GIT忽略清单

	将不需要被git管理的文件名字添加到此文件中，在执行git命令的时候，git就会忽略这些文件。

	git忽略清单文件名称：.gitignore 

		//需要使用touch .gitignore来创建该文件


