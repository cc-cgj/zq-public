------使用transform: translate(x,y)移动元素是相对于元素原来位置开始移动，相当于建立一个坐标原点为元素原来位置的坐标轴，元素在虚拟坐标轴上移动，xy
的值决定了元素在该坐标轴上的坐标。

一、CSS3 2D转换(即改变标签在二维平面上的位置和形状)

	//不对 inline 行内元素生效

	------移动

		transform:translate(x,y);

			1、x,y分别指的是水平移动和垂直移动

			2、移动不影响其他元素的位置

			3、单位为%号时，移动的距离是以本身的宽和高决定

			4、行内元素无影响

	------旋转

		transform:rotate(number deg); //transform:rotate(30deg);

			1、单位为deg

			2、默认以中心点旋转

	------设置旋转中心点

		transform-origin:x y;

			1、参数x和y之间是用空格分开的

			2、x y 默认旋转的中心点是元素的中心即50% 50%，也可用center,center表示

			3、还可以给 x y 设置像素或者方位名词( top 、 bottom 、 left 、 right 、 center )

	------元素的放大和缩小

		transform: scale(x,y)
			注意：
				1、x,y之间是用逗号进行分隔
				2、transform: scale(2,2) : 宽和高都放大了二倍	
				3、transform: scale(0.5,0.5) : 宽和高都放缩小一半
				4、如果只写了x，则y的值跟x一致
				5、默认以中心点缩放，而且不影响其他盒子

	-------2D转换的综合写法及顺序问题

			transform: translate(x,y) rotate(45deg) scale(1.2)

				注意：先旋转会改变坐标轴方向，所以位移需要放在最前面

二、自定义动画（自定义动画不会改变元素的本来样式）

	------定义动画

		@keyframes 动画名称{
			0%{
				width:100px;//动画开始时元素的状态
			}
			100%{
				width:200px;//动画结束时元素的状态
			}
		}
	
	-------调用动画

		div{
			animation:动画名称;
			animation-duration:持续时间;
		}
			
	------动画序列
		1、0%是动画的开始，100%是动画的完成，这样的规则就是动画序列。
		2、在@keyframes中规定某项CSS样式，即创建当前样式逐渐改为新样式的动画效果。
		3、可以改变任意多的样式任意多的次数
		4、百分比来规定变化发生的时间，form、to分别等同0、100%

	------动画常见的属性
		1、@keyframes：规定动画
		2、animation：所有动画属性的简写，除animation-play-state属性
		3、animation-name：规定@keyframes动画的名称//必须
		4、animation-duration：规定动画完成一个周期所花费的时间，单位秒或毫秒，默认为0//必须
		5、animation-timing-fuction：规定动画的运动曲线，默认为ease(由快到慢)
		6、animation-delay：规定动画何时开始，默认为0
		7、animation-iteration-count：规定动画播放的次数，默认为1，infinite为循环播放
		8、animation-direction：规定动画是否逆向播放，默认是normal正常播放，reverse动画反向播放，alternate动画在奇数次正向播放，在偶数次反向
	播放。alternate-reverse：奇反，偶正。
		9、animation-play-state：规定动画是否正常运行或暂停。默认为running正常，paused暂停
		10、animation-fill-mode：规定动画结束后的状态，backwards回到起始状态，forwards停留在结束状态

	-------动画调用的简写方式
		animation: 动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 起始与结束状态
		animation: name duration timing-function delay iteration-count direction fill-mode
		注意：
			1、不包含animation-play-state
			2、暂停动画通常和鼠标经过(:hover)等其他配合使用

	------速度曲线
		1、linear：动画从头到尾的速度是相同的，即匀速
		2、ease：默认。动画从低速开始，然后加快，在结束前变慢
		3、ease-in：动画以低速开始
		4、ease-out：动画以低速结束
		5、ease-in-out：动画以低速开始再加速然后减速结束
		6、steps()：制定了时间函数中的间隔数量(步长)，常用于制作人物跑步等其他运动动画

文字强制一行显示：while-space: nowrap;

