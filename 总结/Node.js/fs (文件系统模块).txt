

	一、概念：fs 模块是 Node.js 提供的用来操作文件的模块。它提供了一系列的方法和属性。

		注意：如果要在 JavaScript 代码中，使用 fs 模块来操作文件，则需要先导入

			例：const fs = require("fs") //返回的是一个fs对象

	二、方法：

		------readFile()

			概念：读取指定文件中的内容

			语法：fs.readFile("path","charset",function(err,data){})

				参数：

					path：必选，文件的路径。
		
					charset：可选，读取文件的编码格式

					err：读取成功该参数为null，读取失败该参数为一个错误对象。

					data：读取成功该参数为字符串，包含了读取文件的内容，读取失败为undefined
			

		------writeFile()

			概念：向指定的文件中写入内容

			语法：fs.writeFile("path","content","charset",function(err){})

			参数：

				path：必选，文件的路径。
				
				content：必选，写入的内容
		
				charset：可选，读取文件的编码格式

				err：写入成功该参数为null，写入失败该参数为一个错误对象。

			注意：
					
				在使用 fs 模块操作文件时，如果提供的操作路径是以./或../开头的相对路径时，很容易出现路径动态拼接错误的问题。
		
				原因：代码在运行的时候，会以执行 node 命令时所处的目录，动态拼接出被操作文件的完整路径。

				解决方案：在使用 fs 模块操作文件时，直接提供完整的路径，不要提供 ./ 或 ../ 开头的相对路径，从而防止路径动态

			拼接的问题。

				___dirname：

					概念：显示当前被执行js文件的绝对路径(根路径)

					语法：直接使用console.log(__dirname) //D:\NodeJs\webpk

