

	一、概念：path 模块是 Node.js 提供的用来处理路径的模块。它提供了一系列的方法和属性。

		注意：如果要在 JavaScript 代码中，使用 path 模块来处理文件路径，则需要先导入
		
			例：const path = require("path") //返回的是一个path对象

	二、方法：

		------join()

			概念：默认将路径片段使用特定的分隔符（window：\）连接起来形成路径，并规范化生成的路径。若任意一个路径片段类型
				
		错误，会报错。返回的是一个新的字符串

			语法：path.join(path1，path2，path3...)

			参数：路径片段

			例：console.log(path.join("a","b\c","d","../")) -----> a\b\c

			注意：当参数内路径片段含有子目录或文件时，之间不能用\符号进行分隔，因为js里\为转义符，所以只能使用/符号分隔


		------basename()

			概念：获取路径中的最后一部分，经常通过这个方法获取路径中的文件名

			语法：path.basename(str,ext)

			参数：

				str：必选。表示一个路径的字符串

				ext：可选。一般用来截取文件的后缀名

				例：console.log(path.basename("a/b/index.js",".js")) -----> index

			注意：当第二个参数值的最末的字符跟路径的最后一个字符不相同时，表示截取失败。


		------extname()

			概念：获取路径的文件后缀名，包括点（.）

			语法：path.extname(str) 

			参数： str：必选。表示一个路径的字符串

			例：console.log(path.extname("a/b/index.html")) -----> .html


