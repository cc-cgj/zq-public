 
 一、绑定事件

	概念：在小程序中 通过 bind(冒泡) 或 catch(非冒泡) 关键字来在组件(标签)中绑定监听事件的

	常见事件：

		1、bindtap = "handleBtn" ：点击事件  // catchtap则不会发生冒泡

		2、bindlongtap：长按事件

		3、bindchange：在checkbox-group或radio-group组件(标签)中选中项发生改变时触发 change 事件

	注意：

		1、在组件中绑定监听事件的处理函数不用加括号

		2、在页面的js文件中，事件处理函数跟data在同一层
		
		3、插值表达式中不能调用方法

 二、事件对象

	概念：在小程序中事件对象在事件触发时会默认传入到函数中，通过第一个形参来接收

	注意：

		1、事件对象只有在事件触发时才会默认传入到第一个形参中

		2、只能通过定义事件处理函数的第一个形参来获取事件对象	

 二、事件传参

	概念：在小程序中通过 data-参数名 = "参数" 的方式来传递参数，所有的参数都会传递到事件处理函数的e(事件对象).currentTarget.dataset里

	例：
		<view bindtap="aa" data-obj = "{name:"zs",age:12}">点我</view>

		aa(e){ console.log(e.currentTarget.dataset.obj) //{name:"zs",age:12} }

	注意：

		1、在组件中传递的所有参数只能通过事件对象来获取
		
		2、在插值表达式({{}})中不能传递自定义对象如 data-obj = "{{{name:"zs",age:12}}}"

		3、在插值表达式中可以传递数组，也可以通过data-obj = "[1,2,3]"传递

		4、若传递的参数为数值或者布尔值时，只能通过插值表达式来传递。如： data-num = "{{1}}" || data-bool = "{{true}}"，否则会被解析

	成字符串

		5、若传递的参数为对象，该对象只能是data里的数据，通过插值表达式来传递。

			例：

				data-obj = "{name:zs}" 

				console.log(e.currentTarget.obj) // "{name:zs}"(字符串)


