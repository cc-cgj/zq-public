
一、概念

	webpack基于node的一个打包工具。由于webpack是用nodejs编写的，所以它依赖的运行环境就是nodejs。也正因为这一点，webpack只能识别JavaScript

，所有非JavaScript（包括HTML，CSS，Typescript等）编写的文件都需要经过处理，这是借助对应的loader加载器安装插件来实现。

	webpack使用的是nodejs默认的模块系统：commonjs，借助nodejs提供的API来操作待打包项目的源文件（如fs模块、path模块等）。webpack将这些文件

整合压缩后，输出到一个特定的目录下（通常是dist）。处理过的dist一般会被直接上传到静态资源服务器使用。

window 终端快捷键

	输入 cls 命令：清除终端显示记录

	使用 esc 键，能够快速清空当前已输入的命令

	使用 tab 键，能够快速补全路径

webpack-config.js 需要手动创建

webpack进行打包命令：npm run dev

	注意：

		1、运行命令后默认是将src文件夹的index.js文件进行打包
			
		2、文件打包后会默认生成dist文件夹，包含的是打包好的文件，文件默认为main.js

		3、可以手动设置所要打包的文件和打包后的文件名。

		4、打包后的文件需要在html文件内进行导入

		5、在终端的某盘某文件夹下运行该命令会默认将这个文件夹内的所有内容都保存在端口为8080的本地服务器上
		
		6、在本地服务器上访问该文件才会解析

自动打包工具webpack-dev-server在启动打包服务后

		注意：webpack-dev-server自动打包的输出文件，默认放到了服务器的根目录中，所以需要在index.html文件中重新导入输出文件。


--------webpack中的加载器

	1、默认情况下，webpack只能打包js文件，如果想要打包非js文件，需要将文件导入js文件中，再调用loader加载器进行打包

	2、非js文件直接导入到html文件中，如css文件直接导入到html文件中，进行打包后会被直接解析为内联样式，而不是外联样式。



	------打包样式表中的图片以及字体文件

		概念：在样式表css中有时候会设置背景图片和设置字体文件，一样需要loader进行处理

		