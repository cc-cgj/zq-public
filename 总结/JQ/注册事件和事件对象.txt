
	
	一、简单注册事件
		
		$("targetNode").click() / .mouseenter() ... //不能同时注册多个事件

		$("targetNode").change()事件：当元素状态发生改变的时候触发

			//一般用于input标签type为checkbox、ridio和select标签中option标签的selected属性。

	注意：jq中调用方法注册同一事件不会发生覆盖

	二、bind()

		概念：给当前元素注册事件
		
		两种语法：
		
			1、$("targetNode").bind("事件类型",回调函数)
		      		  

			2、$("targetNode").bind({

						click:function(){},

						mouseenter:function(){}	

					   })
			
		注意：
			1、事件类型可以是多个，通过空格分隔，此时它们的事件处理函数是一样的

			2、参数为一个对象，对象中的每个方法为一个事件类型。此时每个事件类型对应了不同的事件处理函数。

			3、不可以给动态生成的元素添加事件，如先给当前所有div注册事件，若此时再通过js、jq再创建出div，此时所创建的

		div是没有注册事件的。
		

	三、delegate()

		概念：注册委托事件 //(为父元素注册事件) //这种方式对于新建的子元素同样有事件附加
		
		两种语法：
			
			1、$("parentNode").delegate(".子元素的类名或标签名或#id","事件类型",回调函数)
			  	   
			2、$("parentNode").delegate(".子元素的类名或标签名或#id",{

						  	click:function(){},

							dblclick:function(){} 
						  })

			注意：
				1、第一个参数为必须子元素的".类名"或"标签名"，即".child" 或 "p"

				2、不能通过$("childNode")来指定的子元素，若通过该方式来指定子元素，其实是给父元素自己注册事件。

				3、可以给后面动态生成的子元素添加事件

				4、给父元素下的子元素添加事件，若第一个参数为"",此时给父元素自己注册事件

				5、通过delegate()注册委托事件，在同一事件的执行顺序只比on()注册委托事件高

	四、on()注册事件
		
		1、on()注册简单事件
			
			两种语法：
				   1、注册单个事件：$("targetNode").on("事件类型",回调函数)

				   2、注册多个事件：$("targetNode").on({

							 	click:function(){},

								dblclick:function(){}

						    })
		
		2、on()注册委托事件 //这种方式对于动态创建的子元素同样有事件附加

			概念：为父元素下的子元素添加事件。
		
			两种语法：
				   1、给父元素下的子元素添加单个事件：
	
						$("parentNode").on("事件类型",".子元素的类名或标签名或#id",回调函数)

				   2、给父元素下的子元素添加多个事件

						$("parentNode").on({
							 	click:function(){},
								dblclick:function(){}
						    },".子元素的类名或标签名或#id")					
				
				注意：

					1、第二个参数为必须子元素的".类名"或"标签名"，即".child" 或 "p"

					2、不能通过$("childNode")来指定的子元素，若通过该方式来指定子元素，其实是给父元素自己注册事件。

					3、通过该方式注册的事件在同一事件里执行顺序最低

					4、给父元素下的子元素添加事件，若第二个参数为""/空,此时给父元素自己注册事件 //针对第一种语法

					5、支持动态绑定


	五、jQuery事件对象(window.event)的属性和方法跟js的区别

		1、使用方法都是相同的
	
		2、js中不兼容IE6 7 8的属性和方法在jq中兼容


